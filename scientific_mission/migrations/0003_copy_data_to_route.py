# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-22 21:18
from __future__ import unicode_literals
from django.db import migrations


def reverse_data(apps, schema_editor):
    model_scientific_mission = apps.get_model("scientific_mission", "ScientificMission")
    model_route = apps.get_model("scientific_mission", "Route")

    scientific_mission_id = None
    for route in model_route.objects.all().order_by('scientific_mission_id', 'order'):
        if route.scientific_mission_id != scientific_mission_id:
            scientific_mission = model_scientific_mission.objects.get(pk=route.scientific_mission.id)
            scientific_mission.origin_city_id = route.origin_city.id
            scientific_mission.destination_city_id = route.destination_city.id
            scientific_mission.departure = route.departure
            scientific_mission.save()
            scientific_mission_id = route.scientific_mission_id
        else:
            scientific_mission = model_scientific_mission.objects.get(pk=route.scientific_mission.id)
            scientific_mission.arrival = route.departure
            scientific_mission.save()

    model_route.objects.all().delete()


def load_data(apps, schema_editor):
    model_scientific_mission = apps.get_model("scientific_mission", "ScientificMission")
    model_route = apps.get_model("scientific_mission", "Route")

    for mission in model_scientific_mission.objects.all():

        model_route.objects.create(
            scientific_mission=mission,
            origin_city=mission.origin_city,
            destination_city=mission.destination_city,
            order=0,
            departure=mission.departure,
            arrival=mission.departure
        )

        model_route.objects.create(
            scientific_mission=mission,
            origin_city=mission.destination_city,
            destination_city=mission.origin_city,
            order=1,
            departure=mission.arrival,
            arrival=mission.arrival
        )

        mission.date_of_registration = mission.arrival
        mission.save()


class Migration(migrations.Migration):

    dependencies = [
        ('scientific_mission', '0002_add_route'),
    ]

    operations = [
        migrations.RunPython(load_data, reverse_data)
    ]
